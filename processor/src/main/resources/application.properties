### Logging
logging.level.com.rabbit.springcloudstream.processor = debug

### Spring
spring.output.ansi.enabled                           = always
spring.application.name                              = processor

### Spring WEB
server.port                                          = 8082

### Spring ACTUATOR
## Endpoints
management.endpoints.jmx.exposure.include            = *
management.endpoints.web.exposure.include            = *

## Health
# values: never (default) | always | when_authorized
management.endpoint.health.show-details              = always

## Info
# git
management.info.git.mode                             = full

### Spring Cloud STREAM
spring.cloud.stream.bindings.input.destination       = timestamp-temp
spring.cloud.stream.bindings.input.group             = timestampGroup
spring.cloud.stream.bindings.output.destination      = timestamp
spring.cloud.stream.bindings.output.group            = timestampGroup

### Spring Cloud STREAM - KAFKA
spring.cloud.stream.kafka.binder.brokers             = localhost:9092

### Spring KAFKA
#spring.kafka.bootstrap-servers                   = localhost:9092
#spring.kafka.client-id                           = ${spring.application.name}
#spring.kafka.template.default-topic              = timestamp

## consumer
#spring.kafka.consumer.bootstrap-servers          = ${spring.kafka.bootstrap-servers}
#spring.kafka.consumer.group-id                   = timestamp-processors
#spring.kafka.consumer.client-id                  = ${spring.kafka.client-id}
#spring.kafka.template.default-topic              = timestamp
# values: none | exception | earliest | latest
#spring.kafka.consumer.auto-offset-reset          = latest

## producer
#spring.kafka.producer.bootstrap-servers          = ${spring.kafka.bootstrap-servers}
#spring.kafka.producer.client-id                  = ${spring.kafka.client-id}
#spring.kafka.producer.retries                    = 3

### Kafka CUSTOM
#kafka.jaeger.topic.id                            = timestamp
#kafka.jaeger.countdown.latch.seconds             = 1
#kafka.jaeger.json.trusted.packages               = java.util,java.lang,java.time,com.rabbitshop.kafkasample.commons.messages

### Opentracing
#opentracing.jaeger.udp-sender.host                             = localhost
#opentracing.jaeger.udp-sender.port                             = 6831

#opentracing.jaeger.probabilistic-sampler.sampling-rate         = 1
#opentracing.jaeger.rate-limiting-sampler.max-traces-per-second = 1
#opentracing.jaeger.probabilistic-sampler.sampling-rate         = 0.2
#opentracing.jaeger.rate-limiting-sampler.max-traces-per-second = 0.2

#opentracing.jaeger.log-spans                                   = false
#opentracing.jaeger.http-sender.max-payload                     = 1

# This flag controls the possibility of spring-cloud to add logs (produced in the specific method) to opentracing spans
# When it is enable, there is a risk of a ConcurrentModificationException (see logs/exception.txt)
opentracing.spring.cloud.log.enabled                 = false
